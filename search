<h1>search result</h1>

<h3 id="stores_header">Stores, Shops, and Services</h3>
<div id="search_container_stores" class="store_list_padding search_result">
    <script id="search_template_stores" type="x-tmpl-mustache/text">
        <a href="/stores/{{slug}}">{{name}}</a>
        <p>{{description_trim}}</p>
    </script>
</div>


<h3 id="promotions_header">Upcoming Promotions</h3>    
<div id="search_container_promotions" class="store_list_padding search_result">
    <script id="search_template_promotions" type="x-tmpl-mustache/text">
        <a href="/promotions/{{slug}}">{{name}}</a>
        <p>{{description_trim}}</p>
      
    </script>
</div>
<h3 id="events_header">Upcoming Events</h3>    
<div id="search_container_events"  class="store_list_padding search_result">
    <script id="search_template_events" type="x-tmpl-mustache/text">
        <a href="/events/{{slug}}">{{name}}</a>
        <p>{{description_trim}}</p>
    </script>
</div>



<h3 id="jobs_header">Career Opportunities</h3>    
<div id="search_container_jobs" class="store_list_padding search_result">
    <script id="search_template_jobs" type="x-tmpl-mustache/text">
        <a href="/jobs/{{slug}}">{{name}}</a>
        <p>{{description_trim}}</p>
    </script>
</div>    

<h3 id="genInfo_header">Genreral Information</h3>    
<div id="search_container_genInfo" class="store_list_padding search_result">
    <script id="search_template_genInfo" type="x-tmpl-mustache/text">
        <a href="{{link}}">{{name}}</a>
        <p>{{description_trim}}</p>
    </script>
</div>  

<h3 id="no_search_header" class="hidden_now">No Search Query Found</h3>
<div id="no_search_container" class="store_list_padding search_result hidden_now">
   
        <p>Please use the search bar to enter search keyword.</p>
  
</div>

<script>
    
    $(window).load(function() {
        $('.flexslider').flexslider({
            animation: "slide",
            controlNav: false,
            directionNav: false,        
            prevText: "Previous",
            nextText: "Next"
        });
    });
    $(document).ready(function(e){
        init(e); 
        loadMallData(renderAll); 
        
    });
    //loadMallDataCached(renderAll); 
    function renderAll(){
        var params = getRequestParam('query');
        console.log(params);
        if(params) {
            var search_results = getSVCSearchResults(params,15,300);
            console.log(params, search_results);
            
             if (search_results.stores != undefined && search_results.stores.length > 0){
                renderGeneral('#search_container_stores','#search_template_stores', search_results.stores);
            }
            else{
                $('#stores_header').hide()
            }
            if (search_results.promotions != undefined && search_results.promotions.length > 0){
                renderGeneral('#search_container_promotions','#search_template_promotions', search_results.promotions);
            }
            else{
                $('#promotions_header').hide()
            }
            if (search_results.events != undefined &&  search_results.events.length > 0){
                renderGeneral('#search_container_events','#search_template_events', search_results.events);
            }
            else{
                $('#events_header').hide()
            }
            
            search_results.jobs.sort(function(a, b) {
                var textA = a.name;
                var textB = b.name;
                return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;
            });
            
            if (search_results.jobs != undefined &&  search_results.jobs.length > 0){
                renderGeneral('#search_container_jobs','#search_template_jobs', search_results.jobs);
            }
            else{
                $('#genInfo_header').hide()
            }
            
            //console.log(search_results.stores);
            //console.log(search_results.genInfo, (search_results.genInfo.length > 0));
            if (search_results.genInfo != undefined &&  search_results.genInfo.length > 0){
                renderGeneral('#search_container_genInfo','#search_template_genInfo', search_results.genInfo);
            }
            else{
                $('#genInfo_header').hide()
            }
        }
        else {
            $("#no_search_header").show();
            $("#no_search_container").show();
            $('#genInfo_header').hide();
            $('#genInfo_header').hide();
        }

        show_content();
       
    }
    
    function getSVCSearchResults(search_string,max_results,trim_description_length){
        var search_results = {};
        var all_stores = getStoresList();
        var store_ids = [];
        var stores =[];
        var count = 0;
        // console.log(all_stores);
        $.each( all_stores , function( key, val ) {
            //localizeObject(val);
            if(store_ids.indexOf(val.id) == -1){
                // console.log(search_string, val.name);
                if(val.name.toLowerCase().indexOf(search_string.toLowerCase()) > -1){
                    val.description_trim = val.description.substring(0, trim_description_length) + "..";
                    stores.push(val);
                    store_ids.push(val.id);
                    count++;
                }
                if(count >= max_results){
                    return false;
                }
            }
            if(store_ids.indexOf(val.id) == -1){
                var tags_string = val.tags.join();
                var keywords_string  = val.keywords.join();
                if(search_string.length > 3 && (tags_string.toLowerCase().indexOf(search_string.toLowerCase()) > -1 || keywords_string.toLowerCase().indexOf(search_string.toLowerCase()) > -1)){
                    val.description_trim = val.description.substring(0, trim_description_length) + "..";
                    stores.push(val);
                    store_ids.push(val.id);
                    count++;
                }
                if(count >= max_results){
                    return false;
                }
            
            }
            if(store_ids.indexOf(val.id) == -1){
                // console.log(search_string, val.name);
                if(val.description.toLowerCase().indexOf(search_string.toLowerCase()) > -1){
                    val.description_trim = val.description.substring(0, trim_description_length) + "..";
                    stores.push(val);
                    store_ids.push(val.id);
                    count++;
                }
                if(count >= max_results){
                    return false;
                }
            }
             if(store_ids.indexOf(val.id) == -1){
                // console.log(search_string, val.name);
                if((val.description_2 !== null ) && (val.description_2 !== undefined )) {
                    if(val.description_2.toLowerCase().indexOf(search_string.toLowerCase()) > -1){
                        val.description_trim = val.description_2.substring(0, trim_description_length) + "..";
                        stores.push(val);
                        store_ids.push(val.id);
                        count++;
                    }
                    if(count >= max_results){
                        return false;
                    }
                }
                
            }
             if(store_ids.indexOf(val.id) == -1){
                // console.log(search_string, val.name);
                if((val.store_service !== null ) && (val.store_service !== undefined )) {
                    if(val.store_service.toLowerCase().indexOf(search_string.toLowerCase()) > -1){
                        val.description_trim = val.description.substring(0, trim_description_length) + "..";
                        stores.push(val);
                        store_ids.push(val.id);
                        count++;
                    }
                    if(count >= max_results){
                        return false;
                    }
                }
           
            }
        });
        search_results['stores'] = stores;
        if(stores.length === 0){
            search_results['stores_header_style'] = "display:none";
        }
        
           // St Vital Search through pages        
        var slug_list = { 
                            'Service' : ['/pages/svc-customer-service','/pages/svc-leasing', '/pages/svc-community-booth','/pages/svc-giftcard'],
                            'Submission Requirements' : ['/pages/svc-submission-requirements'],
                            'Base Building' : ['/pages/svc-base-building?building=1&menu=2','/pages/svc-base-building--2?building=1&menu=2','/pages/svc-base-building--3?building=1&menu=2','/pages/svc-base-building--4?building=1&menu=2','/pages/svc-base-building--5?building=1&menu=2','/pages/svc-base-building--6?building=1&menu=2'],
                            'Tenants Manual' : ['/pages/svc-tenants-manual'],
                            'Construction' : ['/pages/svc-construction?building=1&menu=3','/pages/svc-construction--2?building=1&menu=3','/pages/svc-construction--3?building=1&menu=3','/pages/svc-construction--4?building=1&menu=3'],
                            'Sustainability' : ['/pages/svc-sustainability-criteria?building=1&menu=4']
                        };
        
        var genInfo =[];
        var gen_info_list = [];
        var gen_count = 0;
        prefix = get_prefix();
        $.each( slug_list , function( key, each_list ) {
            $.each( each_list , function( key_slug, slug ) {
                var pages_json = prefix + slug + ".json"
                $.getJSON(pages_json).done(function(data) {
                    if(gen_info_list.indexOf(key) == -1){
                        
                        if((data.body.indexOf(search_string.toLowerCase()) > -1) || (data.title.toLowerCase().indexOf(search_string.toLowerCase()) > -1)  ){
                            console.log(data.title,slug);
                            var val = {};
                            val.name = key;
                            val.link = slug;
                            val.description = $(data.body).text();
                            val.description_trim = val.description.substring(0, trim_description_length) + "..";
                            genInfo.push(val);
                            gen_info_list.push(key);
                            count++;
                             //console.log(gen_count);
                             gen_count++;
                        }
                        if(count >= max_results){
                            return false;
                        }
                        
                        if (genInfo != undefined &&  genInfo.length > 0){
                            console.log ("HELOOOO");
                            renderGeneral('#search_container_genInfo','#search_template_genInfo', genInfo);
                        }
                        else{
                            $('#genInfo_header').hide()
                        }
                    }
                }).fail(function(jqXHR) {
                    if (jqXHR.status == 404) {
                        $("#404_msg").fadeIn("fast");
                    }
                });
            });
        });
        
        search_results['genInfo'] = genInfo;
        if(gen_count === 0){
            console.log(gen_count);
            search_results['genInfo_header_style'] = "display:none";
        }
        
        
        //we only want to keep checking promos, events or jobs descriptions if there is more that 2 search string characters, otherwise too many results
        if(count >= max_results || search_string.length < 3){
            search_results['summary'] = {"count":count};
            search_results['promotions_header_style'] = "display:none";
            search_results['events_header_style'] = "display:none";
            search_results['jobs_header_style'] = "display:none";
            return search_results;
        }
        
        var all_promotions = getPromotionsList();
        var promotion_ids = [];
        var promotions =[];
        $.each( all_promotions , function( key, val ) {
            localizeObject(val);
            var added = false;
            if(promotion_ids.indexOf(val.id) == -1){
                if(val.name.toLowerCase().indexOf(search_string.toLowerCase()) > -1){
                    val.description_trim = val.description.substring(0, trim_description_length) + "..";
                    promotions.push(val);
                    promotion_ids.push(val.id);
                    count++;
                    added = true;
                }
                if(count >= max_results){
                    return false;
                }
            }
            if(!added){
                
                if(val.description.toLowerCase().indexOf(search_string.toLowerCase()) > -1){
                    val.description_trim = val.description.substring(0, trim_description_length) + "..";
                    promotions.push(val);
                    promotion_ids.push(val.id);
                    count++;
                }
                if(count >= max_results){
                    return false;
                }
            }
        });
        search_results['promotions'] = promotions;
        if(promotions.length === 0){
            search_results['promotions_header_style'] = "display:none";
        }
        
        
        var all_events = getEventsList();
        var event_ids = [];
        var events =[];
        $.each( all_events , function( key, val ) {
            localizeObject(val);
            var added = false;
            if(event_ids.indexOf(val.id) == -1){
                if(val.name.toLowerCase().indexOf(search_string.toLowerCase()) > -1){
                    val.description_trim = val.description.substring(0, trim_description_length) + "..";
                    events.push(val);
                    event_ids.push(val.id);
                    added = true;
                    count++;
                }
                if(count >= max_results){
                    return false;
                }
            }
            if(!added){
                
                if(val.description.toLowerCase().indexOf(search_string.toLowerCase()) > -1){
                    val.description_trim = val.description.substring(0, trim_description_length) + "..";
                    events.push(val);
                    event_ids.push(val.id);
                    count++;
                }
                if(count >= max_results){
                    return false;
                }
            }
        });
        search_results['events'] = events;
        if(events.length === 0){
            search_results['events_header_style'] = "display:none";
        }
        
        var all_jobs = getJobsList();
        var job_ids = [];
        var jobs =[];
        $.each( all_jobs , function( key, val ) {
            localizeObject(val);
            var added = false;
            if(job_ids.indexOf(val.id) == -1){
                if(val.name.toLowerCase().indexOf(search_string.toLowerCase()) > -1){
                    val.description_trim = val.description.substring(0, trim_description_length) + "..";
                    jobs.push(val);
                    job_ids.push(val.id);
                    added = true;
                    count++;
                }
                if(count >= max_results){
                    return false;
                }
            }
            if(!added){
                if(val.description.toLowerCase().indexOf(search_string.toLowerCase()) > -1){
                    val.description_trim = val.description.substring(0, trim_description_length) + "..";
                    jobs.push(val);
                    job_ids.push(val.id);
                    count++;
                }
                if(count >= max_results){
                    return false;
                }
            }
        });
        search_results['jobs'] = jobs;
        if(jobs.length === 0){
            search_results['jobs_header_style'] = "display:none";
        }
        
     
        search_results['summary'] = {"count":count};
        
        
    
        return search_results;
        
    }
</script>